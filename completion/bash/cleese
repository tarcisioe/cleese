_path_like_comp()
{
    # This forces readline to only display the last item separated by a slash
    compopt -o filenames

    local IFS=$'\n'
    local k="${#COMPREPLY[@]}"

    for path in $(compgen -W "$1" -- $2)
    do
        path="${path#${2}}"/
        trailing="${path#*/}"
        trailing="${trailing%/}"
        path="${path%/}"
        path="${path%%"${trailing}"}"

        [[ -n "$trailing" ]] && compopt -o nospace

        COMPREPLY[k++]="${2}${path}"
    done
}

_cleese() {
    local cur="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"
    local address port

    opts="--address --port --server"

    if [[ ${cur} == -* ]]
    then
        COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
        return 0
    fi

    for i in "${!COMP_WORDS[@]}"
    do
        if [[ ${COMP_WORDS[$i]} == --address ]]
        then
            address=${COMP_WORDS[$i+1]}
        elif [[ ${COMP_WORDS[$i]} == --port ]]
        then
            port=${COMP_WORDS[$i+1]}
        fi
    done

    [[ $address == "" ]] && address='localhost'
    [[ $port == "" ]] && port=6600

    case ${prev} in
        --address) ;&
        --port) ;&
        --server)
            return 0
            ;;
        replace) ;&
        add)
            read prefix <<< ${cur#'"'}
            prefix="${prefix%'"'}"
            possibilities="$(cleese --address $address --port $port \
                             prefix-search "$prefix" 2> /dev/null)"
            _path_like_comp "$possibilities" "$prefix" && return 0
            return 0
            ;;
    esac

    COMPREPLY=($(compgen -W "$(cleese commands)" -- $cur))
}

complete -F _cleese cleese
